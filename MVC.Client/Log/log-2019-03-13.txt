已于 2019/3/13 15:22:43 +08:00
 打开了连接
SELECT 
"GroupBy1"."A1" AS "C1"
FROM ( SELECT 
	COUNT(1) AS "A1"
	FROM "HSL_LOGMANGAGE"."__MigrationHistory" "Extent1"
	WHERE ("Extent1"."ContextKey" = :p__linq__0)
)  "GroupBy1"


-- p__linq__0: 'LMS.Infrastructure.Seedwork.MainUnitOfWork' (Type = Object)

-- 正在 2019/3/13 15:22:44 +08:00
 执行
-- 已在 8 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:22:44 +08:00
 关闭了连接
已于 2019/3/13 15:22:44 +08:00
 打开了连接
SELECT * 
FROM ( 
SELECT 
"Project1"."C1" AS "C1", 
"Project1"."MigrationId" AS "MigrationId", 
"Project1"."Model" AS "Model", 
"Project1"."ProductVersion" AS "ProductVersion"
FROM ( SELECT 
	"Extent1"."MigrationId" AS "MigrationId", 
	"Extent1"."Model" AS "Model", 
	"Extent1"."ProductVersion" AS "ProductVersion", 
	1 AS "C1"
	FROM "HSL_LOGMANGAGE"."__MigrationHistory" "Extent1"
	WHERE ("Extent1"."ContextKey" = :p__linq__0)
)  "Project1"
ORDER BY "Project1"."MigrationId" DESC
)
WHERE (ROWNUM <= (1) )


-- p__linq__0: 'LMS.Infrastructure.Seedwork.MainUnitOfWork' (Type = Object)

-- 正在 2019/3/13 15:22:44 +08:00
 执行
-- 已在 1 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:22:44 +08:00
 关闭了连接
已于 2019/3/13 15:22:47 +08:00
 打开了连接
已于 2019/3/13 15:22:47 +08:00
 启动了事务
create table "HSL_LOGMANGAGE"."SYS_ROLE_MODULE"
(
    "ID" raw(16) not null, 
    "ROLE_ID" raw(16) not null, 
    "MODULE_ID" raw(16) not null,
    constraint "PK_SYS_ROLE_MODULE" primary key ("ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 76 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."SYS_MODULE"
(
    "ID" raw(16) not null, 
    "PARENT_ID" raw(16) null, 
    "CODE" nvarchar2(128) not null, 
    "NAME" nvarchar2(64) not null, 
    "ICON" nvarchar2(64) null, 
    "MODULE_PATH" nvarchar2(128) null, 
    "IS_FUNCTION" number(1, 0) not null, 
    "IS_ENABLED" number(1, 0) not null, 
    "CREATE_DATE" date not null, 
    "LAST_UPDATE_DATE" date not null,
    constraint "PK_SYS_MODULE" primary key ("ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 16 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."SYS_ROLE"
(
    "ID" raw(16) not null, 
    "ROLE_CODE" nvarchar2(64) not null, 
    "ROLE_NAME" nvarchar2(128) not null, 
    "PY_CODE" nvarchar2(64) not null, 
    "CREATE_DATE" date not null, 
    "LAST_UPDATE_DATE" date not null,
    constraint "PK_SYS_ROLE" primary key ("ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 12 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."SYS_ROLE_USER"
(
    "ID" raw(16) not null, 
    "ROLE_ID" raw(16) not null, 
    "USER_ID" raw(16) not null,
    constraint "PK_SYS_ROLE_USER" primary key ("ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 11 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."SYS_USER"
(
    "ID" raw(16) not null, 
    "CODE" nvarchar2(64) not null, 
    "NAME" nvarchar2(128) not null, 
    "LOGIN_NAME" nvarchar2(64) not null, 
    "PASSWORD" nvarchar2(64) not null, 
    "SALT_VALUE" nvarchar2(36) not null, 
    "PY_CODE" nvarchar2(64) not null, 
    "CREATE_DATE" date not null, 
    "LAST_UPDATE_DATE" date not null,
    constraint "PK_SYS_USER" primary key ("ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 14 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."SYS_CORPORATION"
(
    "ID" raw(16) not null, 
    "AUTOMATIC_CODE" nvarchar2(128) not null, 
    "CORP_CODE" nvarchar2(128) not null, 
    "CORP_NAME" nvarchar2(64) not null, 
    "PY_CODE" nvarchar2(64) not null, 
    "IS_DEL" number(1, 0) not null, 
    "CREATE_DATE" date not null, 
    "LAST_UPDATE_DATE" date not null, 
    "PARENT_ID" raw(16) null,
    constraint "PK_SYS_CORPORATION" primary key ("ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 17 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."SYS_CORP_DEPART_POSITION"
(
    "CORP_ID" raw(16) not null, 
    "DEPART_ID" raw(16) not null, 
    "POSITION_ID" raw(16) not null, 
    "CREATE_DATE" date not null, 
    "LAST_UPDATE_DATE" date not null,
    constraint "PK_SYS_CORP_DEPART_POSITION" primary key ("CORP_ID", "DEPART_ID", "POSITION_ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 30 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."SYS_POSITION"
(
    "ID" raw(16) not null, 
    "POSITION_CODE" nvarchar2(64) not null, 
    "POSITION_NAME" nvarchar2(128) not null, 
    "PY_CODE" nvarchar2(64) not null, 
    "IS_DEL" number(1, 0) not null, 
    "CREATE_DATE" date not null, 
    "LAST_UPDATE_DATE" date not null,
    constraint "PK_SYS_POSITION" primary key ("ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 42 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."SYS_DEPARTMENT"
(
    "ID" raw(16) not null, 
    "DEPART_CODE" nvarchar2(64) not null, 
    "DEPART_NAME" nvarchar2(128) not null, 
    "PY_CODE" nvarchar2(64) not null, 
    "IS_DEL" number(1, 0) not null, 
    "CREATE_DATE" date not null, 
    "LAST_UPDATE_DATE" date not null,
    constraint "PK_SYS_DEPARTMENT" primary key ("ID")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 18 毫秒内完成，结果为: -1



begin
  execute immediate
  'create index "HSL_LOGMANGAGE"."IX_SYS_ROLE_MODULE_ROLE_ID" on "HSL_LOGMANGAGE"."SYS_ROLE_MODULE" ("ROLE_ID")';
exception
  when others then
    if sqlcode <> -1408 then
      raise;
    end if;
end;


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 6 毫秒内完成，结果为: -1



begin
  execute immediate
  'create index "HSL_LOGMANGAGE"."IX_SYS_ROLE_MODULE_MODULE_ID" on "HSL_LOGMANGAGE"."SYS_ROLE_MODULE" ("MODULE_ID")';
exception
  when others then
    if sqlcode <> -1408 then
      raise;
    end if;
end;


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 5 毫秒内完成，结果为: -1



begin
  execute immediate
  'create index "HSL_LOGMANGAGE"."IX_SYS_MODULE_PARENT_ID" on "HSL_LOGMANGAGE"."SYS_MODULE" ("PARENT_ID")';
exception
  when others then
    if sqlcode <> -1408 then
      raise;
    end if;
end;


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 5 毫秒内完成，结果为: -1



begin
  execute immediate
  'create index "HSL_LOGMANGAGE"."IX_SYS_ROLE_USER_ROLE_ID" on "HSL_LOGMANGAGE"."SYS_ROLE_USER" ("ROLE_ID")';
exception
  when others then
    if sqlcode <> -1408 then
      raise;
    end if;
end;


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 5 毫秒内完成，结果为: -1



begin
  execute immediate
  'create index "HSL_LOGMANGAGE"."IX_SYS_ROLE_USER_USER_ID" on "HSL_LOGMANGAGE"."SYS_ROLE_USER" ("USER_ID")';
exception
  when others then
    if sqlcode <> -1408 then
      raise;
    end if;
end;


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 6 毫秒内完成，结果为: -1



begin
  execute immediate
  'create index "HSL_LOGMANGAGE"."IX_SYS_CORPORATION_PARENT_ID" on "HSL_LOGMANGAGE"."SYS_CORPORATION" ("PARENT_ID")';
exception
  when others then
    if sqlcode <> -1408 then
      raise;
    end if;
end;


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 6 毫秒内完成，结果为: -1



alter table "HSL_LOGMANGAGE"."SYS_ROLE_MODULE" add constraint "FK_SYS_ROLE_MODULE_MODULE_ID" foreign key ("MODULE_ID") references "HSL_LOGMANGAGE"."SYS_MODULE" ("ID") on delete cascade


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 15 毫秒内完成，结果为: -1



alter table "HSL_LOGMANGAGE"."SYS_ROLE_MODULE" add constraint "FK_SYS_ROLE_MODULE_ROLE_ID" foreign key ("ROLE_ID") references "HSL_LOGMANGAGE"."SYS_ROLE" ("ID") on delete cascade


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 18 毫秒内完成，结果为: -1



alter table "HSL_LOGMANGAGE"."SYS_MODULE" add constraint "FK_SYS_MODULE_PARENT_ID" foreign key ("PARENT_ID") references "HSL_LOGMANGAGE"."SYS_MODULE" ("ID") on delete cascade


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 9 毫秒内完成，结果为: -1



alter table "HSL_LOGMANGAGE"."SYS_ROLE_USER" add constraint "FK_SYS_ROLE_USER_ROLE_ID" foreign key ("ROLE_ID") references "HSL_LOGMANGAGE"."SYS_ROLE" ("ID") on delete cascade


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 10 毫秒内完成，结果为: -1



alter table "HSL_LOGMANGAGE"."SYS_ROLE_USER" add constraint "FK_SYS_ROLE_USER_USER_ID" foreign key ("USER_ID") references "HSL_LOGMANGAGE"."SYS_USER" ("ID") on delete cascade


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 8 毫秒内完成，结果为: -1



alter table "HSL_LOGMANGAGE"."SYS_CORPORATION" add constraint "FK_SYS_CORPORATION_PARENT_ID" foreign key ("PARENT_ID") references "HSL_LOGMANGAGE"."SYS_CORPORATION" ("ID") on delete cascade


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 6 毫秒内完成，结果为: -1



create table "HSL_LOGMANGAGE"."__MigrationHistory"
(
    "MigrationId" nvarchar2(150) not null, 
    "ContextKey" nvarchar2(300) not null, 
    "Model" blob not null, 
    "ProductVersion" nvarchar2(32) not null,
    constraint "PK___MigrationHistory" primary key ("MigrationId", "ContextKey")
) segment creation immediate


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 26 毫秒内完成，结果为: -1



declare
model_blob blob;
begin
dbms_lob.createtemporary(model_blob, true);
dbms_lob.append(model_blob, to_blob(castas long raw)));
dbms_lob.append(model_blob, to_blob(castas long raw)));
dbms_lob.append(model_blob, to_blob(cast('7CD7AFB025DC5E3639CB3567F852B3DB87288378969971089BBBC55ADCF1252F2DB31198A2FCBED9098986783A49422993E5FEF065B2BC7FF7C75D59696607DF94B19227EEE2365BDABB1DD3A5DE0B924093FBFD6635D92FA6E20A96BC02CCFA84DDB616146BD5015447D14C7477960AF567F3E52B36C10677A21D5A339DBE6AD2A8A9A4573DDBAE022933027A12021310B3F5F4091709349BA3F9143D57201F72655463A32CF0FE59F498A25FE6D0910E37AFB967E8ABB8969E79E89579C795AB53A29E3AFB3A2B17F27D0D79ED4643DE0C68CA6C88FB04E28653D6B91DD321DF4EE5787651E524DF43E5C0BD9BCCEB301926D5483749A82729472AB5388AD27C99FCA39457829EC9FB854D640909ECABAEE19CDFC601AA01072B6021440DB79BA82A74DDC1D4D0838B3B7153D4427F84AE173E6194AFAF071FA932F6FD29293F745DCDC84998522548736FB9F3BDC4641C01C74BCC597CD7F2E8EB9AE4806FE2F5F0E2A3391A87B9FAB7B034F83C96FF1574BC9116FF3C447D3F481B07CDE68D7425FD5BBCCA7B9A8CACC141D25B8007D162E6AF672E89DD5A0D5926BD8B64C953B83AF4F52175EB2B70D427E07C649FD78A967F0B16A23254FC7856F4656C909AE407E52A114EA62905A4C055139CCC5946D8BEF980EF8E6E1DA8EAD1BF62224B7801435F5E894B84C863B64220B3F88614B46039157D44CCACB8DC606205A55F8FED1309C486ED84C827366DD74970D830CBAF49CFF2F373FDD7B50E6386240F58837ED4B78D7881CDC3F57A165BB1BC76FC0499DA6B98E134D3D7303099F72B83C6D554DFDDA6B0B11526D07A6D7374A2AD694321126FAD40B763822DA9737C68F4BD86B23DD8009E5326B286D51666C2F22A2E1627BBF2DE5E1667B3386A2EC66C9DE91D0896CF3D092087736E9CD0BDA68B575F7C3D4B0295F36ADAB766D35FAF6503F7BDBBEE3AB5085F8F4A67B2510D6B462635F5AECEFD56E7B3EBF2F5A00C5F9888BA6CE53DBE921579918D68A1BD60743CD44A6E82F5B1B81EB7FAB4A43BE443F29AE5837AAE3FA52F2A596A258F0E7B57092FACE671C9BA4CECBBF69A55CF6A1778BA84CA94BC62616915BE19E965E9BACB5692EB565D0A9EA974AB2E856F83FA596BAE2BF7D2D5BA74291723B82A75EB64CE2A0ED7AB3A704C907CD1B26F97502C7AB0FD8B99A93B80898ED1753AE8E92C2AD85651AF2DBCF737967F559687E5E66E3559DF4DEEF0A631DC252A7F2861AE370CFC9839A7E916D214A0C7492A74B7B983E31E562591740D6608A55FF1CA102F6E5C140BABCB7150E22292B16B8656E65B0E92F8E07CB39BE49561E0A85AC759B48E938F4374B2149F98563254C28610716E8264ED3B8624F92507D170B02BE49E18B297ABA39753CD2DC753E61FC854F6EC579DBC7A03669D315D8FE8FC41B752FB8EF47C6985' as long raw)));
dbms_lob.append(model_blob, to_blob(cast('8DB2A1D2FE325BBBA0C161365DD18E61B8D361B658A74E6C3E2FA1BA97AC3E575412AE54084C84CC87D14C5539F649070A2E7DD4DB0CCFE85188EBEAC7146284302DA866C2CAA4CDC27AB4E30097E2286E425F85861ED0F0DB0FC7D31F81EAA1AFF12390E05F3D0ACA248CE5B9F900B585B5F1BD93EFA12143F3C178218581A3E432FA41E9BC2CCFA3CD297858D9C410109B3ACE7E6CACCF3E529884EFDB9C0C4801040EBFEF20FA3C9C4B14CD7BF0F89220AD6D8B1328125FB26BD843F3642030776329E02BACC31B723B4B7804EA4BFC1EA718A47A22B2621FCD74707480E94618697FF427D261CD7CFEF9FF5F57EAF082930000' as long raw)));
insert into "HSL_LOGMANGAGE"."__MigrationHistory"("MigrationId", "ContextKey", "Model", "ProductVersion")
values ('201903130722471_InitialCreate', 'LMS.Infrastructure.Seedwork.MainUnitOfWork', model_blob, '6.1.3-40302');
end;


-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 23 毫秒内完成，结果为: -1



已于 2019/3/13 15:22:47 +08:00
 提交了事务
已于 2019/3/13 15:22:47 +08:00
 打开了连接
已于 2019/3/13 15:22:47 +08:00
 启动了事务
insert into "HSL_LOGMANGAGE"."SYS_MODULE"("ID", "PARENT_ID", "CODE", "NAME", "ICON", "MODULE_PATH", "IS_FUNCTION", "IS_ENABLED", "CREATE_DATE", "LAST_UPDATE_DATE")
values (:p0, null, :p1, :p2, :p3, :p4, :p5, :p6, :p7, :p8)

-- :p0: 'System.Byte[]' (Type = Binary)

-- :p1: '0001' (Type = String, Size = 128)

-- :p2: '系统管理' (Type = String, Size = 64)

-- :p3: 'el-icon-tickets' (Type = String, Size = 64)

-- :p4: '' (Type = String, Size = 128)

-- :p5: '0' (Type = Decimal)

-- :p6: '1' (Type = Decimal)

-- :p7: '2019/3/13 15:22:41' (Type = Date)

-- :p8: '2019/3/13 15:22:41' (Type = Date)

-- 正在 2019/3/13 15:22:47 +08:00
 执行
-- 已在 20 毫秒内完成，结果为: 1



已于 2019/3/13 15:22:47 +08:00
 提交了事务
已于 2019/3/13 15:22:47 +08:00
 关闭了连接
已于 2019/3/13 15:24:58 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."PARENT_ID" AS "PARENT_ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."ICON" AS "ICON", 
"Extent1"."MODULE_PATH" AS "MODULE_PATH", 
"Extent1"."IS_FUNCTION" AS "IS_FUNCTION", 
"Extent1"."IS_ENABLED" AS "IS_ENABLED", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_MODULE" "Extent1"


-- 正在 2019/3/13 15:24:58 +08:00
 执行
-- 已在 3 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:24:58 +08:00
 关闭了连接
已于 2019/3/13 15:25:28 +08:00
 打开了连接
已于 2019/3/13 15:25:28 +08:00
 启动了事务
insert into "HSL_LOGMANGAGE"."SYS_MODULE"("ID", "PARENT_ID", "CODE", "NAME", "ICON", "MODULE_PATH", "IS_FUNCTION", "IS_ENABLED", "CREATE_DATE", "LAST_UPDATE_DATE")
values (:p0, :p1, :p2, :p3, :p4, :p5, :p6, :p7, :p8, :p9)

-- :p0: 'System.Byte[]' (Type = Binary)

-- :p1: 'System.Byte[]' (Type = Binary)

-- :p2: '00010001' (Type = String, Size = 128)

-- :p3: '用户管理' (Type = String, Size = 64)

-- :p4: '' (Type = String, Size = 64)

-- :p5: '' (Type = String, Size = 128)

-- :p6: '0' (Type = Decimal)

-- :p7: '1' (Type = Decimal)

-- :p8: '2019/3/13 15:25:28' (Type = Date)

-- :p9: '2019/3/13 15:25:28' (Type = Date)

-- 正在 2019/3/13 15:25:28 +08:00
 执行
-- 已在 1 毫秒内完成，结果为: 1



已于 2019/3/13 15:25:28 +08:00
 提交了事务
已于 2019/3/13 15:25:28 +08:00
 关闭了连接
已于 2019/3/13 15:26:46 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE ((((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL))) AND ("Extent1"."ID" <> :p__linq__1))


-- p__linq__0: 'admin' (Type = Object)

-- p__linq__1: '00000000-0000-0000-0000-000000000000' (Type = Binary, IsNullable = false)

-- 正在 2019/3/13 15:26:46 +08:00
 执行
-- 已在 3 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:26:46 +08:00
 关闭了连接
已于 2019/3/13 15:26:46 +08:00
 打开了连接
已于 2019/3/13 15:26:46 +08:00
 启动了事务
insert into "HSL_LOGMANGAGE"."SYS_USER"("ID", "CODE", "NAME", "LOGIN_NAME", "PASSWORD", "SALT_VALUE", "PY_CODE", "CREATE_DATE", "LAST_UPDATE_DATE")
values (:p0, :p1, :p2, :p3, :p4, :p5, :p6, :p7, :p8)

-- :p0: 'System.Byte[]' (Type = Binary)

-- :p1: '00010002' (Type = String, Size = 64)

-- :p2: '技术部' (Type = String, Size = 128)

-- :p3: 'admin' (Type = String, Size = 64)

-- :p4: '91821F2B2AEF5B35DE8EDA6F95817FF8DCCC80A0' (Type = String, Size = 64)

-- :p5: '227319c0-a0c3-47ea-9539-84948532b62e' (Type = String, Size = 36)

-- :p6: 'JSB' (Type = String, Size = 64)

-- :p7: '2019/3/13 15:26:46' (Type = Date)

-- :p8: '2019/3/13 15:26:46' (Type = Date)

-- 正在 2019/3/13 15:26:46 +08:00
 执行
-- 已在 2 毫秒内完成，结果为: 1



已于 2019/3/13 15:26:46 +08:00
 提交了事务
已于 2019/3/13 15:26:46 +08:00
 关闭了连接
已于 2019/3/13 15:29:59 +08:00
 打开了连接
SELECT 
"GroupBy1"."A1" AS "C1"
FROM ( SELECT 
	COUNT(1) AS "A1"
	FROM "HSL_LOGMANGAGE"."__MigrationHistory" "Extent1"
	WHERE ("Extent1"."ContextKey" = :p__linq__0)
)  "GroupBy1"


-- p__linq__0: 'LMS.Infrastructure.Seedwork.MainUnitOfWork' (Type = Object)

-- 正在 2019/3/13 15:29:59 +08:00
 执行
-- 已在 10 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:29:59 +08:00
 关闭了连接
已于 2019/3/13 15:29:59 +08:00
 打开了连接
SELECT * 
FROM ( 
SELECT 
"Project1"."C1" AS "C1", 
"Project1"."MigrationId" AS "MigrationId", 
"Project1"."Model" AS "Model", 
"Project1"."ProductVersion" AS "ProductVersion"
FROM ( SELECT 
	"Extent1"."MigrationId" AS "MigrationId", 
	"Extent1"."Model" AS "Model", 
	"Extent1"."ProductVersion" AS "ProductVersion", 
	1 AS "C1"
	FROM "HSL_LOGMANGAGE"."__MigrationHistory" "Extent1"
	WHERE ("Extent1"."ContextKey" = :p__linq__0)
)  "Project1"
ORDER BY "Project1"."MigrationId" DESC
)
WHERE (ROWNUM <= (1) )


-- p__linq__0: 'LMS.Infrastructure.Seedwork.MainUnitOfWork' (Type = Object)

-- 正在 2019/3/13 15:29:59 +08:00
 执行
-- 已在 3 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:29:59 +08:00
 关闭了连接
已于 2019/3/13 15:29:59 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:29:59 +08:00
 执行
-- 已在 3 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:29:59 +08:00
 关闭了连接
已于 2019/3/13 15:29:59 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:29:59 +08:00
 执行
-- 已在 1 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:29:59 +08:00
 关闭了连接
已于 2019/3/13 15:29:59 +08:00
 打开了连接
SELECT m.ID AS Id,m.PARENT_ID AS ParentId,m.CODE AS Code,m.NAME,m.ICON,m.MODULE_PATH AS ModulePath,m.IS_FUNCTION AS IsFunction
  FROM SYS_MODULE m
 LEFT JOIN SYS_ROLE_MODULE rm ON rm.MODULE_ID = m.ID
 LEFT JOIN SYS_ROLE_USER ru ON ru.ROLE_ID = rm.ROLE_ID
 WHERE (ru.USER_ID = :UserId OR 1=1)
   AND m.IS_ENABLED='1'

-- UserId: 'D6FBA8A2E2D6284685F31B1AB5F17537' (Type = String, IsNullable = false)

-- 正在 2019/3/13 15:29:59 +08:00
 执行
-- 已在 5 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:29:59 +08:00
 关闭了连接
已于 2019/3/13 15:32:33 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:32:33 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:32:33 +08:00
 关闭了连接
已于 2019/3/13 15:32:33 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:32:33 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:32:33 +08:00
 关闭了连接
已于 2019/3/13 15:33:32 +08:00
 打开了连接
SELECT m.ID AS Id,m.PARENT_ID AS ParentId,m.CODE AS Code,m.NAME,m.ICON,m.MODULE_PATH AS ModulePath,m.IS_FUNCTION AS IsFunction
  FROM SYS_MODULE m
 LEFT JOIN SYS_ROLE_MODULE rm ON rm.MODULE_ID = m.ID
 LEFT JOIN SYS_ROLE_USER ru ON ru.ROLE_ID = rm.ROLE_ID
 WHERE (ru.USER_ID = :UserId OR 1=1)
   AND m.IS_ENABLED='1'

-- UserId: 'D6FBA8A2E2D6284685F31B1AB5F17537' (Type = String, IsNullable = false)

-- 正在 2019/3/13 15:33:32 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:33:32 +08:00
 关闭了连接
已于 2019/3/13 15:35:09 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:35:09 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:35:09 +08:00
 关闭了连接
已于 2019/3/13 15:35:09 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:35:09 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:35:09 +08:00
 关闭了连接
已于 2019/3/13 15:35:32 +08:00
 打开了连接
SELECT m.ID AS Id,m.PARENT_ID AS ParentId,m.CODE AS Code,m.NAME,m.ICON,m.MODULE_PATH AS ModulePath,m.IS_FUNCTION AS IsFunction
  FROM SYS_MODULE m
 LEFT JOIN SYS_ROLE_MODULE rm ON rm.MODULE_ID = m.ID
 LEFT JOIN SYS_ROLE_USER ru ON ru.ROLE_ID = rm.ROLE_ID
 WHERE (ru.USER_ID = :UserId OR 1=1)
   AND m.IS_ENABLED='1'

-- UserId: 'D6FBA8A2E2D6284685F31B1AB5F17537' (Type = String, IsNullable = false)

-- 正在 2019/3/13 15:35:32 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:35:32 +08:00
 关闭了连接
已于 2019/3/13 15:40:51 +08:00
 打开了连接
SELECT 
"GroupBy1"."A1" AS "C1"
FROM ( SELECT 
	COUNT(1) AS "A1"
	FROM "HSL_LOGMANGAGE"."__MigrationHistory" "Extent1"
	WHERE ("Extent1"."ContextKey" = :p__linq__0)
)  "GroupBy1"


-- p__linq__0: 'LMS.Infrastructure.Seedwork.MainUnitOfWork' (Type = Object)

-- 正在 2019/3/13 15:40:52 +08:00
 执行
-- 已在 6 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:40:52 +08:00
 关闭了连接
已于 2019/3/13 15:40:52 +08:00
 打开了连接
SELECT * 
FROM ( 
SELECT 
"Project1"."C1" AS "C1", 
"Project1"."MigrationId" AS "MigrationId", 
"Project1"."Model" AS "Model", 
"Project1"."ProductVersion" AS "ProductVersion"
FROM ( SELECT 
	"Extent1"."MigrationId" AS "MigrationId", 
	"Extent1"."Model" AS "Model", 
	"Extent1"."ProductVersion" AS "ProductVersion", 
	1 AS "C1"
	FROM "HSL_LOGMANGAGE"."__MigrationHistory" "Extent1"
	WHERE ("Extent1"."ContextKey" = :p__linq__0)
)  "Project1"
ORDER BY "Project1"."MigrationId" DESC
)
WHERE (ROWNUM <= (1) )


-- p__linq__0: 'LMS.Infrastructure.Seedwork.MainUnitOfWork' (Type = Object)

-- 正在 2019/3/13 15:40:52 +08:00
 执行
-- 已在 1 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:40:52 +08:00
 关闭了连接
已于 2019/3/13 15:40:52 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:40:52 +08:00
 执行
-- 已在 1 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:40:52 +08:00
 关闭了连接
已于 2019/3/13 15:40:52 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:40:52 +08:00
 执行
-- 已在 1 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:40:52 +08:00
 关闭了连接
已于 2019/3/13 15:40:52 +08:00
 打开了连接
SELECT m.ID AS Id,m.PARENT_ID AS ParentId,m.CODE AS Code,m.NAME,m.ICON,m.MODULE_PATH AS ModulePath,m.IS_FUNCTION AS IsFunction
  FROM SYS_MODULE m
 LEFT JOIN SYS_ROLE_MODULE rm ON rm.MODULE_ID = m.ID
 LEFT JOIN SYS_ROLE_USER ru ON ru.ROLE_ID = rm.ROLE_ID
 WHERE (ru.USER_ID = :UserId OR 1=1)
   AND m.IS_ENABLED='1'

-- UserId: 'D6FBA8A2E2D6284685F31B1AB5F17537' (Type = String, IsNullable = false)

-- 正在 2019/3/13 15:40:52 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:40:52 +08:00
 关闭了连接
已于 2019/3/13 15:41:00 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:41:00 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:41:00 +08:00
 关闭了连接
已于 2019/3/13 15:41:00 +08:00
 打开了连接
SELECT 
"Extent1"."ID" AS "ID", 
"Extent1"."CODE" AS "CODE", 
"Extent1"."NAME" AS "NAME", 
"Extent1"."LOGIN_NAME" AS "LOGIN_NAME", 
"Extent1"."PASSWORD" AS "PASSWORD", 
"Extent1"."SALT_VALUE" AS "SALT_VALUE", 
"Extent1"."PY_CODE" AS "PY_CODE", 
"Extent1"."CREATE_DATE" AS "CREATE_DATE", 
"Extent1"."LAST_UPDATE_DATE" AS "LAST_UPDATE_DATE"
FROM "HSL_LOGMANGAGE"."SYS_USER" "Extent1"
WHERE (((UPPER("Extent1"."LOGIN_NAME")) = (UPPER(:p__linq__0))) OR ((UPPER("Extent1"."LOGIN_NAME") IS NULL) AND (UPPER(:p__linq__0) IS NULL)))


-- p__linq__0: 'admin' (Type = Object)

-- 正在 2019/3/13 15:41:00 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



已于 2019/3/13 15:41:00 +08:00
 关闭了连接
已于 2019/3/13 15:41:15 +08:00
 打开了连接
SELECT m.ID AS Id,m.PARENT_ID AS ParentId,m.CODE AS Code,m.NAME,m.ICON,m.MODULE_PATH AS ModulePath,m.IS_FUNCTION AS IsFunction
  FROM SYS_MODULE m
 LEFT JOIN SYS_ROLE_MODULE rm ON rm.MODULE_ID = m.ID
 LEFT JOIN SYS_ROLE_USER ru ON ru.ROLE_ID = rm.ROLE_ID
 WHERE (ru.USER_ID = :UserId OR 1=1)
   AND m.IS_ENABLED='1'

-- UserId: 'D6FBA8A2E2D6284685F31B1AB5F17537' (Type = String, IsNullable = false)

-- 正在 2019/3/13 15:41:15 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



SELECT m.ID AS Id,m.PARENT_ID AS ParentId,m.CODE AS Code,m.NAME,m.ICON,m.MODULE_PATH AS ModulePath,m.IS_FUNCTION AS IsFunction
  FROM SYS_MODULE m
 LEFT JOIN SYS_ROLE_MODULE rm ON rm.MODULE_ID = m.ID
 LEFT JOIN SYS_ROLE_USER ru ON ru.ROLE_ID = rm.ROLE_ID
 WHERE (ru.USER_ID = :UserId OR 1=1)
   AND m.IS_ENABLED='1'

-- UserId: 'D6FBA8A2E2D6284685F31B1AB5F17537' (Type = String, IsNullable = false)

-- 正在 2019/3/13 15:41:15 +08:00
 执行
-- 已在 0 毫秒内完成，结果为: OracleDataReader



SELECT m.ID AS Id,m.PARENT_ID AS ParentId,m.CODE AS Code,m.NAME,m.ICON,m.MODULE_PATH AS ModulePath,m.IS_FUNCTION AS IsFunction
  FROM SYS_MODULE m
 LEFT JOIN SYS_ROLE_MODULE rm ON rm.MODULE_ID = m.ID
 LEFT JOIN SYS_ROLE_USER ru ON ru.ROLE_ID = rm.ROLE_ID
 WHERE (ru.USER_ID = :UserId OR 1=1)
   AND m.IS_ENABLED='1'

-- UserId: 'D6FBA8A2E2D6284685F31B1AB5F17537' (Type = String, IsNullable = false)

-- 正在 2019/3/13 15:41:39 +08:00
 执行
-- 已在 1 毫秒内完成，结果为: OracleDataReader



